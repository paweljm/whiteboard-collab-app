{"version":3,"sources":["components/socket.js","components/board/Board.js","components/container/Container.js","App.js","reportWebVitals.js","index.js"],"names":["socket","io","Board","color","useState","mouseDown","setMouseDown","mousePos","setMousePos","useEffect","canvas","document","getElementById","ctx","getContext","strokeStyle","lineJoin","lineWidth","on","clearRect","width","height","onmousedown","e","beginPath","emit","x","y","onmouseup","console","log","lineTo","stroke","onmousemove","rect","getBoundingClientRect","clientX","left","clientY","top","id","className","Container","setColor","type","onChange","event","target","value","onClick","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.40bc97e6.chunk.js","sourcesContent":["import io from \"socket.io-client\";\n\nconst socket = io();\n\nexport default socket;\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport socket from \"../socket\";\n\nimport \"./style.css\";\n\nconst Board = ({ color }) => {\n  const [mouseDown, setMouseDown] = useState(false);\n  const [mousePos, setMousePos] = useState([0, 0]);\n\n  useEffect(() => {\n    const canvas = document.getElementById(\"board\");\n    const ctx = canvas.getContext(\"2d\");\n    ctx.strokeStyle = color;\n    ctx.lineJoin = \"round\";\n    ctx.lineWidth = 2;\n    socket.on(\"onClear\", () => {\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n    });\n    canvas.onmousedown = (e) => {\n      setMouseDown(true);\n      ctx.beginPath();\n      socket.emit(\"down\", { x: mousePos[0], y: mousePos[1] });\n    };\n    canvas.onmouseup = (e) => {\n      setMouseDown(false);\n      socket.emit(\"up\", { x: mousePos[0], y: mousePos[1] });\n    };\n    socket.on(\"onDown\", ({ x, y }) => {\n      ctx.beginPath();\n      console.log(\"onDown\");\n    });\n    socket.on(\"onDraw\", ({ x, y }) => {\n      ctx.lineTo(x, y);\n      ctx.stroke();\n    });\n    canvas.onmousemove = (e) => {\n      let rect = canvas.getBoundingClientRect();\n      setMousePos([\n        ((e.clientX - rect.left) / rect.width) * canvas.width,\n        ((e.clientY - rect.top) / rect.height) * canvas.height,\n      ]);\n\n      if (mouseDown) {\n        socket.emit(\"draw\", { x: mousePos[0], y: mousePos[1] });\n        ctx.lineTo(mousePos[0], mousePos[1]);\n        ctx.stroke();\n      } else {\n      }\n    };\n  });\n\n  return <canvas id=\"board\" className=\"box\"></canvas>;\n};\n\nexport default Board;\n","import React from \"react\";\nimport { useState } from \"react\";\nimport Board from \"../board/Board\";\n\nimport socket from \"../socket\";\n\nimport \"./style.css\";\n\nfunction Container() {\n  const [color, setColor] = useState(\"#fffff\");\n  function handleChange(event) {\n    socket.emit(\"color\", { color: color });\n    setColor(event.target.value);\n  }\n  socket.on(\"onColorSet\", ({ color }) => {\n    setColor(color);\n  });\n  function clearBoard() {\n    socket.emit(\"clear\", {});\n  }\n  return (\n    <div className=\"has-background-link\">\n      <nav className=\"navbar has-background-link has-text-left has-text-white\">\n        <h1 className=\" ml-3 is-size-3\">Collaborative Whiteboard</h1>\n        <p className=\"ml-4 is-size-5\">By Pawel Marcinkiewicz</p>\n      </nav>\n      <div className=\"columns\">\n        <div className=\"column is-three-quarters\">\n          <Board color={color} />\n        </div>\n        <div className=\"column is-2 m-3 box has-text-centered\">\n          <h2>Color</h2>\n          <input\n            type=\"color\"\n            onChange={handleChange}\n            value={color}\n            className=\"input\"\n          ></input>\n          <br />\n          <br />\n          <button className=\"button is-danger is-outlined\" onClick={clearBoard}>\n            Clear Board\n          </button>\n          <br />\n          <br />\n          <p>Draw with your mouse on the board.</p>\n          <p>\n            Invite your peers and anything you draw will be updated on one\n            another's screens in real time\n          </p>\n          <p>\n            <br />\n            <br />\n            <em>\n              Color change and canvas affect all apps globally so that you and\n              your peers are always on the same page\n            </em>\n          </p>\n        </div>\n      </div>\n      <footer className=\"footer has-background-link \">\n        <div className=\"content has-text-centered has-text-white\">\n          See the code\n          <a\n            href=\"https://github.com/paweljm/whiteboard-collab-app\"\n            target=\"__blank\"\n            className=\"has-text-primary\"\n          >\n            {\" \"}\n            here\n          </a>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default Container;\n","import Container from \"./components/container/Container\";\n\nfunction App() {\n  return <Container />;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}